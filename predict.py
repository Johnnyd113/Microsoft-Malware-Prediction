import json
import time
import numpy as np
import pandas as pd
import lightgbm as lgb

start_time = time.time()

with open('SETTINGS.json', 'r') as f:
    config = json.load(f)

#Assign directories from SETTINGS.json
clean_test_data = config['TEST_DATA_CLEAN_PATH']
models_dir = config['MODELS_DIR']
sub_dir = config['SUBMISSION_DIR']


test = pd.read_pickle(clean_test_data)

model_0 = lgb.Booster(model_file=f'{models_dir}model_0')
model_1 = lgb.Booster(model_file=f'{models_dir}model_1')
model_2 = lgb.Booster(model_file=f'{models_dir}model_2')
model_3 = lgb.Booster(model_file=f'{models_dir}model_3')
model_4 = lgb.Booster(model_file=f'{models_dir}model_4')

models = [model_0, model_1, model_2, model_3, model_4]

predictions = np.zeros(len(test))

for model in models:
    predictions += model.predict(test.drop(columns=['MachineIdentifier','HasDetections','test_set']))/5
    print('One model prediction completed.')

#Create a submission table and csv
sub = test[['MachineIdentifier','HasDetections']]
sub['HasDetections'] = predictions
sub.to_csv(f'{sub_dir}submission.csv', index=False)


end_time = time.time()
total_time = end_time - start_time
print(total_time/60)

